pipeline {
    agent any

    stages {
        stage('Clone Repository') {
            steps {
                git credentialsId: 'GitHub', url: 'https://github.com/cyb-swap/shop-app.git'
            }
        }

        stage('Dependency-Check') {
            steps {
                dependencyCheck additionalArguments: '', odcInstallation: 'dep-check-auto'
                dependencyCheckPublisher pattern: ''
                archiveArtifacts allowEmptyArchive: true, artifacts: 'dependency-check-report.xml', fingerprint: true, followSymlinks: false, onlyIfSuccessful: true
                sh ' rm -rf dependency-check-report.xml*'
            }
        }
        
        stage('Build App Docker Image') {
            steps {
                script {
                    docker.build("shop_app_app:latest", "app")
                }
            }
        }
        
        stage('Build Database Docker Image') {
            steps {
                script {
                    docker.build("shop_app_database:latest", "database")
                }
            }
        }
        
        stage('Build Payment Gateway Docker Image') {
            steps {
                script {
                    docker.build("shop_app_payment_gateway:latest", "payment_gateway")
                }
            }
        }
        
        stage('Build Reverse Proxy Docker Image') {
            steps {
                script {
                    docker.build("shop_app_reverse_proxy:latest", "reverse_proxy")
                }
            }
        }

        stage('SCA') {
            steps {
                snykSecurity(
                  snykInstallation: 'snyk',
                  snykTokenId: '1f240d35-9b28-4124-9019-78bb1c75e4aa',
                  failOnIssues: false,
                )
            }
        }
        
        stage('Run Docker Compose') {
            steps {
                script {
                    sh 'docker-compose up -d'
                }
            }
        }
    }
    
    post {
        always {
            script {
                sh 'docker-compose down'
            }
            cleanWs()
        }
    }
}
