pipeline {
    agent any

    stages {
        stage('Clone Repository') {
            steps {
                git credentialsId: 'GitHub', url: 'https://github.com/cyb-swap/shop-app.git'
            }
        }

        stage('Dependency-Check') {
            steps {
                dependencyCheck additionalArguments: '', odcInstallation: 'dep-check-auto'
                dependencyCheckPublisher pattern: ''
                archiveArtifacts allowEmptyArchive: true, artifacts: 'dependency-check-report.xml', fingerprint: true, followSymlinks: false, onlyIfSuccessful: true
                sh ' rm -rf dependency-check-report.xml*'
            }
        }
        
        stage('Build Docker Images') {
            steps {
                script {
                    def images = [
                        ["name": "shop_app_app:latest", "path": "app"],
                        ["name": "shop_app_database:latest", "path": "database"],
                        ["name": "shop_app_payment_gateway:latest", "path": "payment_gateway"],
                        ["name": "shop_app_reverse_proxy:latest", "path": "reverse_proxy"]
                    ]
                    
                    for (img in images) {
                        echo "Building Docker image: ${img.name}"
                        docker.build(img.name, img.path)
                    }
                }
            }
        }

        stage('Container Security') {
            steps {
                sh 'grype shop_app_app:latest > grype.txt'
                archiveArtifacts allowEmptyArchive: true, artifacts: 'grype.txt', fingerprint: true, followSymlinks: false, onlyIfSuccessful: true
                sh ' rm -rf grype.txt'

                sh 'grype shop_app_database:latest > grype.txt'
                archiveArtifacts allowEmptyArchive: true, artifacts: 'grype.txt', fingerprint: true, followSymlinks: false, onlyIfSuccessful: true
                sh ' rm -rf grype.txt'

                sh 'grype shop_app_payment_gateway:latest > grype.txt'
                archiveArtifacts allowEmptyArchive: true, artifacts: 'grype.txt', fingerprint: true, followSymlinks: false, onlyIfSuccessful: true
                sh ' rm -rf grype.txt'

                sh 'grype shop_app_reverse_proxy:latest > grype.txt'
                archiveArtifacts allowEmptyArchive: true, artifacts: 'grype.txt', fingerprint: true, followSymlinks: false, onlyIfSuccessful: true
                sh ' rm -rf grype.txt'
            }                      
        }        
         
        stage('SCA') {
            steps {
                script{
                    dir('app/react-app') {
                        sh 'yarn install'
                        snykSecurity(
                            snykInstallation: 'snyk',
                            snykTokenId: '59e68e07-6d49-416b-a4f3-ba4523a0f631',
                            failOnIssues: false,
                        )
                    }
                }
            }
        }
        
        stage('Run Docker Compose') {
            steps {
                script {
                    sh 'docker-compose up -d'
                }
            }
        }
    }
    
    post {
        always {
            script {
                sh 'docker-compose down'
            }
            cleanWs()
        }
    }
}
